[user]
  name = Mike Ball
  email = mikedball@gmail.com
[alias]
  co = checkout
  ci = commit --signoff
  st = status
  pub = "!f() { git push -u ${1:-origin} `git symbolic-ref HEAD`; }; f"
  l = log --graph --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(white)- %an, %ar%Creset'
  ll = log --stat --abbrev-commit
  d = diff --color-words
  tree = log --graph --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white). %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
  p = push origin $(git rev-parse --abbrev-ref HEAD)
  ne = commit --amend --no-edit
  #force-fetch '!forceFetch () { b=$1; git fetch origin +refs/heads/$b:refs/remotes/origin/$b $b:$b; git remote set-branches --add origin $b; git branch --set-upstream-to=origin/$b $b; }; forceFetch'
  # Copy last commit message to clipboard without leading indentation
  # This is useful for quickly grabbing the commit message to paste as the
  # primary comment on a GitHub pull request.
  cpm = ! git log --no-walk --format=%B | pbcopy
  adda = ! git ls-files ${1:-.} --modified | xargs git add
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[web]
  browser = open
[gui]
  fontdiff = -family Monaco -size 13 -weight normal -slant roman -underline 0 -overstrike 0
[color]
  branch = auto
  diff = auto
  status = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = green
  changed = red
  untracked = cyan
[github]
  user = mdb
[core]
  editor = nvim
  repositoryformatversion = 0
  filemode = true
  bare = false
  logallrefupdates = true
  ignorecase = true
  precomposeunicode = true
  untrackedcache = false
  fsmonitor = false
  pager = less -FX
[init]
  defaultBranch = main
[url "git@github.com:"]
  insteadOf = https://github.com/
