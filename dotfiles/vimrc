call pathogen#helptags()
call pathogen#runtime_append_all_bundles()

set nowrap
set background=dark
syntax on
colorscheme railscasts_moffit

set backspace=indent,eol,start
set number " Show line numbers


" Vundle ********************************************************************
set nocompatible
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
Bundle 'gmarik/vundle'

"Bundles here:
Bundle 'airblade/vim-gitgutter'
Bundle 'scrooloose/syntastic'
Bundle 'scrooloose/nerdtree'
Bundle 'kien/ctrlp.vim'

filetype plugin indent on

" Pathogen ********************************************************************

" filetype off
call pathogen#helptags()
call pathogen#runtime_append_all_bundles()

" ctrlp
set runtimepath^=~/.vim/bundle/ctrlp.vim

" Backup **********************************************************************
set nobackup "no backup
set noswapfile "no swap file

" Folding *********************************************************************
set foldenable
set foldmethod=syntax
set foldlevelstart=99

" Tabs ************************************************************************
set softtabstop=2
set shiftwidth=2
set tabstop=2
set expandtab

" Searching *******************************************************************
set hlsearch  " highlight all matches in search while searching
set ignorecase " ignore case in searches
nmap <silent> ,/ :nohlsearch<CR>

" Navigation ******************************************************************
map <C-l> :tabn<CR>
map <C-h> :tabp<CR>
map <C-n> :tabnew<CR>

" Copy & Paste ****************************************************************
vmap <C-x> :!pbcopy<CR>
vmap <C-c> :w !pbcopy<CR><CR>

" Status Line *****************************************************************
set showcmd
set ruler " Show ruler

" Filetypes *******************************************************************
au BufNewFile,BufRead *.rhtml set syn=eruby "Ruby HTML
au BufNewFile,BufRead *.ftl set syn=ftl "Freemarker
au BufNewFile,BufRead *.pde set syn=pde "Processing
au BufNewFile,BufRead Rakefile set syn=ruby
au BufNewFile,BufRead Gemfile set syn=ruby
au BufNewFile,BufRead config.ru set syn=ruby
au BufNewFile,BufRead Vagrantfile set syn=ruby
au BufNewFile,BufRead *.builder set syn=ruby
au BufNewFile,BufRead *.jbuilder set syn=ruby
au BufNewFile,BufRead *.pp set syn=ruby
au BufNewFile,BufRead *.json set syn=javascript

" show trailing whitespace ***************************************************
set listchars=tab:>\ ,trail:-,extends:>,precedes:<,nbsp:+
set list

" highlight trailing whitespace **********************************************
highlight! link ExtraWhitespace Todo
autocmd BufWinEnter,InsertLeave * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd BufWinLeave * call clearmatches()

if has("gui_running")
  set guioptions=egmrt
  set guifont=Meslo\ LG\ M\ DZ:h12
endif

"set backupdir=~/.vim/backup
"set directory=~/.vim/backup

set ttymouse=xterm2
set mouse=a

" Better File Opening *********************************************************
set wildmode=list:longest,full

" Show whitespace *************************************************************
set listchars=tab:>\ ,trail:-,extends:>,precedes:<,nbsp:+
set list

" Highlight long rows **************************************************
highlight OverLength ctermbg=Magenta ctermfg=white guibg=#592929
match OverLength /\%81v./

" CTRL-P opens in tab **************************************************
let g:ctrlp_prompt_mappings = {
  \ 'AcceptSelection("e")': [],
  \ 'AcceptSelection("t")': ['<cr>', '<c-m>'],
  \ }
